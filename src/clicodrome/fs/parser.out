Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> features
Rule 1     features -> LBRACKET list_feature RBRACKET
Rule 2     features -> LBRACKET RBRACKET
Rule 3     list_feature -> list_feature COMMA feature
Rule 4     list_feature -> feature
Rule 5     feature -> IDENTIFIER COLON atom
Rule 6     feature -> IDENTIFIER COLON list_features
Rule 7     atom -> IDENTIFIER
Rule 8     atom -> atom PIPE IDENTIFIER
Rule 9     list_features -> list_features PIPE features
Rule 10    list_features -> features

Terminals, with rules where they appear

COLON                : 5 6
COMMA                : 3
IDENTIFIER           : 5 6 7 8
LBRACKET             : 1 2
PIPE                 : 8 9
RBRACKET             : 1 2
error                : 

Nonterminals, with rules where they appear

atom                 : 5 8
feature              : 3 4
features             : 9 10 0
list_feature         : 1 3
list_features        : 6 9

Parsing method: LALR

state 0

    (0) S' -> . features
    (1) features -> . LBRACKET list_feature RBRACKET
    (2) features -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 2

    features                       shift and go to state 1

state 1

    (0) S' -> features .



state 2

    (1) features -> LBRACKET . list_feature RBRACKET
    (2) features -> LBRACKET . RBRACKET
    (3) list_feature -> . list_feature COMMA feature
    (4) list_feature -> . feature
    (5) feature -> . IDENTIFIER COLON atom
    (6) feature -> . IDENTIFIER COLON list_features

    RBRACKET        shift and go to state 4
    IDENTIFIER      shift and go to state 6

    list_feature                   shift and go to state 3
    feature                        shift and go to state 5

state 3

    (1) features -> LBRACKET list_feature . RBRACKET
    (3) list_feature -> list_feature . COMMA feature

    RBRACKET        shift and go to state 7
    COMMA           shift and go to state 8


state 4

    (2) features -> LBRACKET RBRACKET .

    $end            reduce using rule 2 (features -> LBRACKET RBRACKET .)
    PIPE            reduce using rule 2 (features -> LBRACKET RBRACKET .)
    RBRACKET        reduce using rule 2 (features -> LBRACKET RBRACKET .)
    COMMA           reduce using rule 2 (features -> LBRACKET RBRACKET .)


state 5

    (4) list_feature -> feature .

    RBRACKET        reduce using rule 4 (list_feature -> feature .)
    COMMA           reduce using rule 4 (list_feature -> feature .)


state 6

    (5) feature -> IDENTIFIER . COLON atom
    (6) feature -> IDENTIFIER . COLON list_features

    COLON           shift and go to state 9


state 7

    (1) features -> LBRACKET list_feature RBRACKET .

    $end            reduce using rule 1 (features -> LBRACKET list_feature RBRACKET .)
    PIPE            reduce using rule 1 (features -> LBRACKET list_feature RBRACKET .)
    RBRACKET        reduce using rule 1 (features -> LBRACKET list_feature RBRACKET .)
    COMMA           reduce using rule 1 (features -> LBRACKET list_feature RBRACKET .)


state 8

    (3) list_feature -> list_feature COMMA . feature
    (5) feature -> . IDENTIFIER COLON atom
    (6) feature -> . IDENTIFIER COLON list_features

    IDENTIFIER      shift and go to state 6

    feature                        shift and go to state 10

state 9

    (5) feature -> IDENTIFIER COLON . atom
    (6) feature -> IDENTIFIER COLON . list_features
    (7) atom -> . IDENTIFIER
    (8) atom -> . atom PIPE IDENTIFIER
    (9) list_features -> . list_features PIPE features
    (10) list_features -> . features
    (1) features -> . LBRACKET list_feature RBRACKET
    (2) features -> . LBRACKET RBRACKET

    IDENTIFIER      shift and go to state 11
    LBRACKET        shift and go to state 2

    atom                           shift and go to state 12
    list_features                  shift and go to state 13
    features                       shift and go to state 14

state 10

    (3) list_feature -> list_feature COMMA feature .

    RBRACKET        reduce using rule 3 (list_feature -> list_feature COMMA feature .)
    COMMA           reduce using rule 3 (list_feature -> list_feature COMMA feature .)


state 11

    (7) atom -> IDENTIFIER .

    PIPE            reduce using rule 7 (atom -> IDENTIFIER .)
    RBRACKET        reduce using rule 7 (atom -> IDENTIFIER .)
    COMMA           reduce using rule 7 (atom -> IDENTIFIER .)


state 12

    (5) feature -> IDENTIFIER COLON atom .
    (8) atom -> atom . PIPE IDENTIFIER

    RBRACKET        reduce using rule 5 (feature -> IDENTIFIER COLON atom .)
    COMMA           reduce using rule 5 (feature -> IDENTIFIER COLON atom .)
    PIPE            shift and go to state 15


state 13

    (6) feature -> IDENTIFIER COLON list_features .
    (9) list_features -> list_features . PIPE features

    RBRACKET        reduce using rule 6 (feature -> IDENTIFIER COLON list_features .)
    COMMA           reduce using rule 6 (feature -> IDENTIFIER COLON list_features .)
    PIPE            shift and go to state 16


state 14

    (10) list_features -> features .

    PIPE            reduce using rule 10 (list_features -> features .)
    RBRACKET        reduce using rule 10 (list_features -> features .)
    COMMA           reduce using rule 10 (list_features -> features .)


state 15

    (8) atom -> atom PIPE . IDENTIFIER

    IDENTIFIER      shift and go to state 17


state 16

    (9) list_features -> list_features PIPE . features
    (1) features -> . LBRACKET list_feature RBRACKET
    (2) features -> . LBRACKET RBRACKET

    LBRACKET        shift and go to state 2

    features                       shift and go to state 18

state 17

    (8) atom -> atom PIPE IDENTIFIER .

    PIPE            reduce using rule 8 (atom -> atom PIPE IDENTIFIER .)
    RBRACKET        reduce using rule 8 (atom -> atom PIPE IDENTIFIER .)
    COMMA           reduce using rule 8 (atom -> atom PIPE IDENTIFIER .)


state 18

    (9) list_features -> list_features PIPE features .

    PIPE            reduce using rule 9 (list_features -> list_features PIPE features .)
    RBRACKET        reduce using rule 9 (list_features -> list_features PIPE features .)
    COMMA           reduce using rule 9 (list_features -> list_features PIPE features .)

