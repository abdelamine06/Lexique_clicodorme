
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'featuresCOLON COMMA IDENTIFIER LBRACKET PIPE RBRACKETfeatures : LBRACKET list_feature RBRACKET\n               | LBRACKET RBRACKETlist_feature : list_feature COMMA feature\n                    | featurefeature : IDENTIFIER COLON atom\n                |  IDENTIFIER COLON list_featuresatom : IDENTIFIER\n                |  atom PIPE IDENTIFIERlist_features : list_features PIPE features\n               | features'
    
_lr_action_items = {'LBRACKET':([0,9,16,],[2,2,2,]),'$end':([1,4,7,],[0,-2,-1,]),'RBRACKET':([2,3,4,5,7,10,11,12,13,14,17,18,],[4,7,-2,-4,-1,-3,-7,-5,-6,-10,-8,-9,]),'IDENTIFIER':([2,8,9,15,],[6,6,11,17,]),'COMMA':([3,4,5,7,10,11,12,13,14,17,18,],[8,-2,-4,-1,-3,-7,-5,-6,-10,-8,-9,]),'PIPE':([4,7,11,12,13,14,17,18,],[-2,-1,-7,15,16,-10,-8,-9,]),'COLON':([6,],[9,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'features':([0,9,16,],[1,14,18,]),'list_feature':([2,],[3,]),'feature':([2,8,],[5,10,]),'atom':([9,],[12,]),'list_features':([9,],[13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> features","S'",1,None,None,None),
  ('features -> LBRACKET list_feature RBRACKET','features',3,'p_features','Parser.py',56),
  ('features -> LBRACKET RBRACKET','features',2,'p_features','Parser.py',57),
  ('list_feature -> list_feature COMMA feature','list_feature',3,'p_list_feature','Parser.py',65),
  ('list_feature -> feature','list_feature',1,'p_list_feature','Parser.py',66),
  ('feature -> IDENTIFIER COLON atom','feature',3,'p_feature','Parser.py',76),
  ('feature -> IDENTIFIER COLON list_features','feature',3,'p_feature','Parser.py',77),
  ('atom -> IDENTIFIER','atom',1,'p_atom','Parser.py',82),
  ('atom -> atom PIPE IDENTIFIER','atom',3,'p_atom','Parser.py',83),
  ('list_features -> list_features PIPE features','list_features',3,'p_list_features','Parser.py',93),
  ('list_features -> features','list_features',1,'p_list_features','Parser.py',94),
]
